---
title: "A Reproducible Example Using the Spaceflights Tutorial"
author: "Rob Wiederstein"
date: today
---


```{python}
#| label: setup
#| include: false

# Standard library imports
import os
import sys
from pathlib import Path
import logging
import datetime

# Third-party library imports
import pandas as pd
from IPython.display import display, Image, Markdown

# function
from pathlib import Path
from IPython.display import Image, display

def pull_latest_version_plot(
    name: str,
    base_dir: str = "../data/08_reporting"
):
    """
    Locate the most recent timestamped subfolder under `base_dir/{folder_name}`,
    then display the image called `{filename}` inside it.

    Parameters
    ----------
    name : str
        Either "dummy_confusion_matrix" or "dummy_confusion_matrix.png"
        (the name of the versioned-folder). If no ".png" suffix is present,
        this function will add it automatically.
    base_dir : str
        The parent directory under which the versioned folder lives.
        (Default: "../data/08_reporting")
    """
    # 1) Normalize so folder_name always ends with ".png"
    if name.lower().endswith(".png"):
        folder_name = name
    else:
        folder_name = f"{name}.png"

    # 2) The actual filename we want to display
    filename = folder_name

    versioned_dir = Path(base_dir) / folder_name
    if not versioned_dir.exists():
        raise FileNotFoundError(f"Versioned folder not found: {versioned_dir}")

    # 3) List all timestamped subdirectories inside that folder
    all_versions = [p for p in versioned_dir.iterdir() if p.is_dir()]
    if not all_versions:
        raise FileNotFoundError(f"No versioned subfolders in {versioned_dir!r}")

    # 4) Pick the lexicographically largest timestamp folder (i.e. latest)
    latest_dir = sorted(all_versions)[-1]

    # 5) Construct the full path to the image file
    img_path = latest_dir / filename
    if not img_path.exists():
        raise FileNotFoundError(f"Image not found: {img_path}")

    # 6) Display the image in Jupyter/Quarto
    display(Image(filename=str(img_path)))
```


# Introduction

This project ports the spaceflights tutorial from [Kedro](https://kedro.org/).  Its significance is that it builds a reproducible pipeline within a broadly accepted python framework.[@wilson_best_2014]  The Kedro framework envisions the use of Sphinx, the widely used Python documentation system.  However, the Sphinx default was changed to Quarto. 


```{python}
#| label: fig-test-static
#| fig-cap: "A moon rocket."

from IPython.display import Image
Image(filename="resources/moon-rocket.jpg") 
```


# Datasets

## Companies

```{python}
#| label: tbl-companies-head
#| tbl-cap: "First 5 rows of the Companies dataset."
df = pd.read_csv("../data/01_raw/companies.csv")
df.head(5)
```

## Reviews 

```{python}
#| label: tbl-reviews-head
#| tbl-cap: "First 5 rows of the Reviews dataset."
df = pd.read_csv("../data/01_raw/reviews.csv")
df.head(5)
```

## Shuttles

```{python}
#| label: tbl-shuttles-head
#| tbl-cap: "First 5 rows of the Shuttles dataset."
df = pd.read_excel("../data/01_raw/shuttles.xlsx")
df.head(5)
```

# Model Inputs

```{python}
#| label: tbl-model-input-head
#| tbl-cap: "First 5 rows of the Model Input Table"
df = pd.read_parquet("../data/03_primary/model_input_table.parquet")
df.head(5)
```


# Results 

```{python}
pull_latest_version_plot(name="dummy_confusion_matrix.png", base_dir="../data/08_reporting")
```


For more information, see moon rocket at [@fig-test-static].


# References {.unnumbered}

:::{#refs}
:::
