---
title: "My Document with Python + Kedro + Quarto"
format:
  html:
    theme: 
      - united
      - resources/theme.scss
    mainfont: "Atkinson Hyperlegible"
    linestretch: 1.5
    fontsize: 1.2em
execute:
  echo: false
  warning: false
  message: false
  error: TRUE
  eval: true
  cache: FALSE
number-sections: true
number-depth: 2
toc: true
toc-depth: 2
bibliography: ./resources/spaceflights.bib
csl: ./resources/ieee.csl
nocite: "@*"
---

```{python}
import os
import sys
from IPython.display import Image, display
import pandas as pd
import numpy as np
from great_tables import GT
import matplotlib.pyplot as plt
```



# Introduction

This project ports the spaceflights tutorial from Kedro.  Its significance is that it builds a reproducible pipeline within a broadly accepted python framework.[@wilson_best_2014]  The Kedro framework envisions the use of Sphinx, the widely used Python documentation system.  However, the Sphinx default was changed to Quarto. 


# Datasets

## Companies

```{python}
#| label: tbl-companies-head
#| tbl-cap: "First 5 rows of the Companies dataset."
#| echo: false

companies_csv_path = "../data/01_raw/companies.csv"
df_companies_5 = pd.read_csv(companies_csv_path).head(5)
GT(df_companies_5)
```

## Reviews 

```{python}
reviews_csv_path = "../data/01_raw/reviews.csv"
df_reviews_5 = pd.read_csv(reviews_csv_path).head(5)
GT(df_reviews_5)
```

## Shuttles

```{python}
#| label: tbl-shuttles-head
#| tbl-cap: "First 5 rows of the Shuttles dataset."
#| echo: false # Set to true if you want to show this code

# pandas should already be imported from the setup chunk.

shuttles_xlsx_path = "../data/01_raw/shuttles.xlsx"
df_shuttles_5 = pd.read_excel(shuttles_xlsx_path).head(5)
GT(df_shuttles_5)
```

```{python}
#| label: kedro-example

from pathlib import Path
from kedro.framework.session import KedroSession
from kedro.framework.startup import bootstrap_project
import pandas as pd

# Assuming this QMD file is in 'docs/', the project root is one level up.
project_path = Path.cwd().parent 

# Bootstrap the Kedro project (loads settings.py, pyproject.toml, etc.)
bootstrap_project(project_path)

# Create a Kedro session to access the context
with KedroSession.create(project_path=project_path) as session:
    context = session.load_context()
    catalog = context.catalog

    # Load the desired dataset
    print("Loading 'model_input_table' from the catalog...")
    model_input_df = catalog.load("model_input_table")

    print(f"Successfully loaded 'model_input_table' with {len(model_input_df)} rows.")

    # Display the first 5 rows (Quarto will render pandas DataFrames nicely)
    model_input_df.head(5)
```




```{python}
#| label: fig-confusion-matrix
#| fig-cap: "Latest Confusion Matrix from the pipeline."
cm_dataset_dir = "../data/08_reporting/dummy_confusion_matrix.png"
image_filename = "dummy_confusion_matrix.png"

latest_version_dir_name = max(
    d for d in os.listdir(cm_dataset_dir) 
    if os.path.isdir(os.path.join(cm_dataset_dir, d))
)

image_path = os.path.join(cm_dataset_dir, latest_version_dir_name, image_filename)
display(Image(filename=image_path))
```

# References {.unnumbered}

:::{#refs}
:::