---
title: "My Document with Python + Kedro + Quarto"
format: html
execute:
  echo: true
---

## Quarto and Python

Quarto enables you to weave together content and executable Python code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Python Code

When you render this document, it will include both the content and the output of the embedded Python code.

Here's a simple Python calculation:

```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

```{python}
#| echo: true # You can control echo per chunk

from pathlib import Path
from kedro.framework.session import KedroSession
from kedro.framework.startup import bootstrap_project
import pandas as pd

# Assuming this QMD file is in 'docs/', the project root is one level up.
project_path = Path.cwd().parent 

# Bootstrap the Kedro project (loads settings.py, pyproject.toml, etc.)
bootstrap_project(project_path)

# Create a Kedro session to access the context
with KedroSession.create(project_path=project_path) as session:
    context = session.load_context()
    catalog = context.catalog

    # Load the desired dataset
    print("Loading 'model_input_table' from the catalog...")
    model_input_df = catalog.load("model_input_table")

    print(f"Successfully loaded 'model_input_table' with {len(model_input_df)} rows.")

    # Display the first 5 rows (Quarto will render pandas DataFrames nicely)
    model_input_df.head(5)
```
