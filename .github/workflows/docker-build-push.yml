# .github/workflows/docker-build-push.yml
name: Docker Build and Push CI

on:
  push:
    branches:
      - main

jobs:
  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set owner to lowercase
        id: owner_case
        run: echo "OWNER_LC=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # This can remain as github.actor for login
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.OWNER_LC }}/spaceflights-app

      - name: Build and push Docker image to GHCR
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output Pushed Image Digest
        run: |
          echo "Pushed image digest: ${{ steps.build-and-push.outputs.digest }}"

      - name: Run Pipeline and Render Documentation
        if: success()
        env: # Environment variables for this GitHub Actions runner step
          QUARTO_LOG_LEVEL_RUNNER: DEBUG
          QUARTO_PRINT_STACK_RUNNER: true
          # Ensure OWNER_LC is available in this step's environment.
          # If it was set with `echo "OWNER_LC=..." >> $GITHUB_ENV` in a previous step
          # of this *same job*, it should be available as env.OWNER_LC.
          # If OWNER_LC is a job-level or workflow-level env var, it's also fine.
        run: |
          echo "-------------------------- Debugging Image Name ------------------------------------"
          echo "Value of env.OWNER_LC: '${{ env.OWNER_LC }}'"
          echo "Value of github.repository_owner (for comparison): '${{ github.repository_owner }}'" # This is the direct GHA context
          echo "Value of github.ref_name: '${{ github.ref_name }}'"
          echo "Attempting to run image name: 'ghcr.io/${{ env.OWNER_LC }}/spaceflights-app:${{ github.ref_name }}'"
          echo "----------------------------------------------------------------------------------"

          echo "-------------------------- Executing Pipeline & Rendering Docs via Script ----------------------------"
          docker run --name output_generator_container \
            -e QUARTO_LOG_LEVEL=${{ env.QUARTO_LOG_LEVEL_RUNNER }} \
            -e QUARTO_PRINT_STACK=${{ env.QUARTO_PRINT_STACK_RUNNER }} \
            ghcr.io/${{ env.OWNER_LC }}/spaceflights-app:${{ github.ref_name }} \
            ./run_and_render.sh
          echo "-------------------------- Script Execution Finished in Container ------------------------------------"

      - name: Prepare Documentation for Deployment
        if: success()
        run: |
          echo "Creating directory for documentation output on runner..."
          mkdir -p ./quarto_site_to_deploy
          echo "Copying rendered Quarto site contents from Docker container..."
          docker cp output_generator_container:/home/kedro_docker/docs/_site/. ./quarto_site_to_deploy/
          docker rm output_generator_container
          echo "Contents of quarto_site_to_deploy (documentation to be deployed):"
          ls -R ./quarto_site_to_deploy

      - name: Deploy to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v4 # Or latest major version
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./quarto_site_to_deploy
